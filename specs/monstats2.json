{
  "overview": "This file controls additional functionalities and statistics for every monster in the game.  This file is treated as a continuation of the monstats.txt file, and therefore its amount of entries should be identical with the monstats.txt file.",
  "data_fields": [
    {
      "name": "Id",
      "description": "Controls the unique name ID to define the monster. This must match the same value in the monstats.txt file."
    },
    {
      "name": "Height",
      "description": "Determines the height of the monster. This has 2 purposes. The first purpose is to act as an index value for selecting which icebreak missile to use when the monster dies while frozen. The second purpose is to select a code which affects what attack animation the player characters will use when attacking the monster (Attack1 and or Attack2). See each code description types below. Code 1 2 3 Description Low Height High Height Both types of Heights Code 1 2 3 4 Description icebreaksmall icebreakmedium icebreaklarge icebreaksmoke"
    },
    {
      "name": "OverlayHeight",
      "description": "Determines the height value of overlays (See Overlay.txt) for the monster"
    },
    {
      "name": "pixHeight",
      "description": "Determines the pixel height value for the damage bar when the monster is selected"
    },
    {
      "name": "SizeX & SizeY",
      "description": "Determines the tile grid size of the monster which is use for handling placement when the monster spawns or uses movement skills"
    },
    {
      "name": "spawnCol",
      "description": "Controls the method for spawning the monster based on the collisions in the environment Code 0 1 2 3 Description"
    },
    {
      "name": "Normal",
      "description": "Basic Monster Pathing"
    },
    {
      "name": "Water",
      "description": "Handle water terrain where units cannot normally walk, but can fly over"
    },
    {
      "name": "Preset",
      "description": "Placement handler which considers walls, no pathable areas, objects, doors, items, and other monsters"
    },
    {
      "name": "Force",
      "description": "Override any collision"
    },
    {
      "name": "MeleeRng",
      "description": "Controls the range of the monster’s melee attack, which can affect also affect certain AI pathing. If this value equals 255, then refer to the monster’s weapon class (“BaseW”)."
    },
    {
      "name": "BaseW",
      "description": "Defines the monster’s base weapon class, which can affect how the monster attacks Code hth 1hs 1ht bow 2hs 2ht 1js 1jt 1ss 1st stf xbw ht1 ht2 Description Hand to Hand (Default value if the value is empty) One Handed Swing One Handed Thrust Bow Two Handed Swing Two Handed Thrust"
    },
    {
      "name": "Dual Wielding",
      "description": "Left Jab Right Swing"
    },
    {
      "name": "Dual Wielding",
      "description": "Left Jab Right Thrust"
    },
    {
      "name": "Dual Wielding",
      "description": "Left Swing Right Swing"
    },
    {
      "name": "Dual Wielding",
      "description": "Left Swing Right Thrust Staff Crossbow One Hand to Hand Two Hand to Hand"
    },
    {
      "name": "HitClass",
      "description": "Defines the specific class of an attack when the monster successfully hits with an attack. This can affect the sound and overlay display of the attack hit. Code 0 1 2 3 4 5 6 7 8 9 10 11 12 13 Description None Hand to Hand One Handed Swing Small One Handed Swing Large Two Handed Swing Small Two Handed Swing Large One Handed Thrust Two Handed Thrust Club Staff Bow Crossbow Claw Do Overlay The following are formula fields that define the types of visual graphics to use for the specific component field. Users can add input parameters by adding a comma “,” to the input and using a code. For a list of possible component inputs, see the compcode.txt file."
    },
    {
      "name": "HDv",
      "description": "Head visual"
    },
    {
      "name": "TRv",
      "description": "Torso visual"
    },
    {
      "name": "LGv",
      "description": "Legs visual"
    },
    {
      "name": "RAv",
      "description": "Right Arm visual"
    },
    {
      "name": "LAv",
      "description": "Left Arm visual"
    },
    {
      "name": "RHv",
      "description": "Right Hand visual"
    },
    {
      "name": "LHv",
      "description": "Left Hand visual"
    },
    {
      "name": "SHv",
      "description": "Shield visual"
    },
    {
      "name": "S1v (to S8v)",
      "description": "Special 1 to Special 8 visual The following fields are Boolean fields, which control which specific component piece is enabled for the monster. If equals 1, then the component is enabled. If equals 0, then the monster does not have that component."
    },
    {
      "name": "HD",
      "description": "Head"
    },
    {
      "name": "TR",
      "description": "Torso"
    },
    {
      "name": "LG",
      "description": "Legs"
    },
    {
      "name": "RA",
      "description": "Right Arm"
    },
    {
      "name": "LA",
      "description": "Left Arm"
    },
    {
      "name": "RH",
      "description": "Right Hand"
    },
    {
      "name": "LH",
      "description": "Left Hand"
    },
    {
      "name": "SH",
      "description": "Shield"
    },
    {
      "name": "S1 (to S8)",
      "description": "Special 1 to Special 8"
    },
    {
      "name": "TotalPieces",
      "description": "Defines the total amount of component pieces that the monster uses. This value should match the number of enabled Boolean fields listed above."
    },
    {
      "name": "mDT",
      "description": "Boolean Field. If equals 1, then enable the Death Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mNU",
      "description": "Boolean Field. If equals 1, then enable the Neutral Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mWL",
      "description": "Boolean Field. If equals 1, then enable the Walk Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mGH",
      "description": "Boolean Field. If equals 1, then enable the Get Hit Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mA1 & mA2",
      "description": "Boolean Field. If equals 1, then enable the Attack 1 (and Attack 2) Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mBL",
      "description": "Boolean Field. If equals 1, then enable the Block Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mSC",
      "description": "Boolean Field. If equals 1, then enable the Cast Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mS1 (to mS4)",
      "description": "Boolean Field. If equals 1, then enable the Skill 1 (to Skill4) Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mDD",
      "description": "Boolean Field. If equals 1, then enable the Dead Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mKB",
      "description": "Boolean Field. If equals 1, then enable the Knockback Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mSQ",
      "description": "Boolean Field. If equals 1, then enable the Sequence Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "mRN",
      "description": "Boolean Field. If equals 1, then enable the Run Mode for the monster. If equals 0, then this mode is disabled."
    },
    {
      "name": "dDT",
      "description": "Defines the number of directions that the monster can face during Death Mode"
    },
    {
      "name": "dNU",
      "description": "Defines the number of directions that the monster can face during Neutral Mode"
    },
    {
      "name": "dWL",
      "description": "Defines the number of directions that the monster can face during Walk Mode"
    },
    {
      "name": "dGH",
      "description": "Defines the number of directions that the monster can face during Get Hit Mode"
    },
    {
      "name": "dA1 & dA2",
      "description": "Defines the number of directions that the monster can face during Attack 1 (and Attack 2) Mode"
    },
    {
      "name": "dBL",
      "description": "Defines the number of directions that the monster can face during Block Mode"
    },
    {
      "name": "dSC",
      "description": "Defines the number of directions that the monster can face during Cast Mode"
    },
    {
      "name": "dS1 (to dS4)",
      "description": "Defines the number of directions that the monster can face during Skill 1 (to Skill 4) Mode"
    },
    {
      "name": "dDD",
      "description": "Defines the number of directions that the monster can face during Dead Mode"
    },
    {
      "name": "dKB",
      "description": "Defines the number of directions that the monster can face during Knockback Mode"
    },
    {
      "name": "dSQ",
      "description": "Defines the number of directions that the monster can face during Sequence Mode"
    },
    {
      "name": "dRN",
      "description": "Defines the number of directions that the monster can face during Run Mode"
    },
    {
      "name": "A1mv & A2mv",
      "description": "Boolean Field. If equals 1, then enable the Attack 1 (and Attack 2) Mode while the monster is moving with the Walk mode or Run mode. If equals 0, then this mode is disabled while the monster is moving."
    },
    {
      "name": "SCmv",
      "description": "Boolean Field. If equals 1, then enable the Cast Mode while the monster is moving with the Walk mode or Run mode. If equals 0, then this mode is disabled while the monster is moving."
    },
    {
      "name": "S1mv (to S4mv)",
      "description": "Boolean Field. If equals 1, then enable the Skill 1 (to Skill 4) Mode while the monster is moving with the Walk mode or Run mode. If equals 0, then this mode is disabled while the monster is moving."
    },
    {
      "name": "noGfxHitTest",
      "description": "Boolean Field. If equals 1, then enable the mouse selection bounding box functionality around the monster. If equals 0, then the monster cannot be selected by the mouse."
    },
    {
      "name": "htTop",
      "description": "Define the pixel top offset around the monster for the mouse selection bounding box functionality. This field relies on the “noGfxHitTest” field being enabled."
    },
    {
      "name": "htLeft",
      "description": "Define the pixel left offset around the monster for the mouse selection bounding box functionality. This field relies on the “noGfxHitTest” field being enabled."
    },
    {
      "name": "htWidth",
      "description": "Define the pixel right offset around the monster for the mouse selection bounding box functionality. This field relies on the “noGfxHitTest” field being enabled."
    },
    {
      "name": "htHeight",
      "description": "Define the pixel bottom offset around the monster for the mouse selection bounding box functionality. This field relies on the “noGfxHitTest” field being enabled."
    },
    {
      "name": "restore",
      "description": "Determines if the monster should be placed on the inactive list, to be saved when the level unloads. If equals 0, then do not save the monster. If equals 1, then rely on other checks to determine to save the monster. If equals 2, then force save the monster."
    },
    {
      "name": "automapCel",
      "description": "Controls what index of the Automap tiles to use to display this monster on the Automap. This field relies on the “noMap” field being disabled."
    },
    {
      "name": "noMap",
      "description": "Boolean Field. If equals 1, then the monster will not appear on the Automap. If equals 0, then the monster will normally appear on the Automap."
    },
    {
      "name": "noOvly",
      "description": "Boolean Field. If equals 1, then no looping overlays will be drawn on the monster. If equals 0, then overlays will be drawn on the monster. (See Overlay.txt)"
    },
    {
      "name": "isSel",
      "description": "Boolean Field. If equals 1, then the monster is selectable and can be targeted. If equals 0, then the monster cannot be selected."
    },
    {
      "name": "alSel",
      "description": "Boolean Field. If equals 1, then the player can always select the monster, regardless of being an ally or enemy. If equals 0, then ignore this."
    },
    {
      "name": "noSel",
      "description": "Boolean Field. If equals 1, then the player can never select the monster. If equals 0, then ignore this."
    },
    {
      "name": "shiftSel",
      "description": "Boolean Field. If equals 1, then the player can target this monster when holding the Shift key and clicking to use a skill. If equals 0, then the monster cannot be targeted while the player is holding the Shift key."
    },
    {
      "name": "corpseSel",
      "description": "Boolean Field. If equals 1, then the monster’s corpse can be with the mouse cursor. If equals 0, then the monster’s corpse cannot be selected with the mouse cursor."
    },
    {
      "name": "isAtt",
      "description": "Boolean Field. If equals 1, then the monster can be attacked. If equals 0, then the monster cannot be attacked."
    },
    {
      "name": "revive",
      "description": "Boolean Field. If equals 1, then the monster is allowed to be revived by the Necromancer Revive skill. If equals 0, then the monster cannot be revived by the Necromancer Revive skill."
    },
    {
      "name": "limitCorpses",
      "description": "Boolean Field. If equals 1, then the monster’s corpse will be placed into a pool with all other corpses with this field checked. Once that pool reaches the max (50), the corpses at the beginning of the pool start getting removed."
    },
    {
      "name": "critter",
      "description": "Boolean Field. If equals 1, then the monster will be flagged as a critter, which gives some special case handling such as not creating impact sounds and differently handling its spawn placement in presets. If equals 0, then ignore this."
    },
    {
      "name": "small",
      "description": "Boolean Field. If equals 1, then the monster will be classified as a small type, which can affect what types of missiles can be used on the monster (Example: Barbarian Grim Ward size) or how the monster is knocked back. If equals 0, then ignore this. If this field is enabled, then the “large” field should be disabled, to avoid confusion."
    },
    {
      "name": "large",
      "description": "Boolean Field. If equals 1, then the monster will be classified as a large type, which can affect what types of missiles can be used on the monster (Example: Barbarian Grim Ward size) or how the monster is knocked back. If equals 0, then ignore this. If this field is enabled, then the “small” field should be disabled, to avoid confusion."
    },
    {
      "name": "soft",
      "description": "Boolean Field. If equals 1, then the monster’s corpse is classified as soft bodied, meaning that its corpse can be used by certain corpse skills such as Barbarian Find Potion, Find Item, or Grim Ward. If equals 0, then the monster’s corpse cannot be used for these skills."
    },
    {
      "name": "inert",
      "description": "Boolean Field. If equals 1, then the monster will never attack its enemies. If equals 0, then ignore this."
    },
    {
      "name": "objCol",
      "description": "Boolean Field. If equals 1 and the monster class is “barricadedoor”, “barricadedoor2”, or “evilhut”, then the monster will place an invisible object with collision. If equals 0, then ignore this."
    },
    {
      "name": "deadCol",
      "description": "Boolean Field. If equals 1, then the monster’s corpse will have collision with other units. If equals 0, then the monster’s corpse will not have collision."
    },
    {
      "name": "unflatDead",
      "description": "Boolean Field. If equals 1, then ignore the corpse draw order for rendering the sprite on top of others, while the monster is dead. If equals 0, then the monster’s corpse will have a normal corpse draw order."
    },
    {
      "name": "Shadow",
      "description": "Boolean Field. If equals 1, then the monster will project a shadow on the ground. If equals 0, then the monster will not project a shadow."
    },
    {
      "name": "noUniqueShift",
      "description": "Boolean Field. If equals 1 and the monster is a Unique monster, then the monster will not have random color palette transform shifts.  If equals 0,"
    },
    {
      "name": "then the non",
      "description": "Unique monster will have random color palette transform shifts."
    },
    {
      "name": "compositeDeath",
      "description": "Boolean Field. If equals 1, then the monster’s Death Mode and Dead mode will make use of its component system. If equals 0, then the"
    },
    {
      "name": "monster will default to using the Hand",
      "description": "To-Hand weapon class and no component system."
    },
    {
      "name": "localBlood",
      "description": "Controls the color of the monster’s blood based on the region locale. If equals 0, then do not change the blood to green and keep it red. If equals 1, then change the monster’s special components to use the green blood locale. If equals 2, then change the blood to green."
    },
    {
      "name": "Bleed",
      "description": "Controls if the monster will create blood missiles. If equals 0, then the monster will never bleed. If equals 1, then the monster will randomly create the “blood1” or “blood2” missiles when hit. If equals 2, then the monster will randomly create the “blood1”, “blood2”, “bigblood1”, or “bigblood2” missiles when hit."
    },
    {
      "name": "Light",
      "description": "Controls the monster’s minimum Light Radius size (measured in grid sub-tiles)"
    },
    {
      "name": "light",
      "description": "r - Controls the red color value of the monster’s Light Radius (Uses a value from 0 to 255)"
    },
    {
      "name": "light",
      "description": "g - Controls the green color value of the monster’s Light Radius (Uses a value from 0 to 255)"
    },
    {
      "name": "light",
      "description": "b - Controls the blue color value of the monster’s Light Radius (Uses a value from 0 to 255)"
    },
    {
      "name": "Utrans & Utrans(N) & Utrans(H)",
      "description": "Modifies the color palette transform for the monster respectively in Normal, Nightmare, and Hell difficulty. Code 0 1 2 3 4 5 6 7 255 Description Cold Poison Level 0 Level 1 Level 2 Level 3 Level 4 Miscellaneous Special case handler. If hostile, then select the Cold transform. If not hostile, then select the Poison transform."
    },
    {
      "name": "InfernoLen",
      "description": "The frame length to hold the channel cast time of the inferno skill. This is used for when the monster has the “inferno” state, or for Diablo when he is using the “DiabLight” skill."
    },
    {
      "name": "InfernoAnim",
      "description": "The exact frame in the channel animation to loop back and start at again"
    },
    {
      "name": "InfernoRollback",
      "description": "The exact frame in the channel animation to determine when to roll back to the “InfernoAnim” frame"
    },
    {
      "name": "ResurrectMode",
      "description": "Controls which monster mode to set on the monster when it is resurrected Code Description DT NU WL GH A1 A2 BL SC S1 S2 S3 S4 DD GH xx RN Death Neutral Walk Get Hit Attack 1 Attack 2 Block Cast Skill 1 Skill 2 Skill 3 Skill 4 Dead Knockback Sequence Run"
    },
    {
      "name": "ResurrectSkill",
      "description": "Controls what skill should the monster use when it is resurrected (See skills.txt)."
    },
    {
      "name": "SpawnUniqueMod",
      "description": "Controls what unique modifier the monster should always spawn with (See monumod.txt)."
    }
  ],
  "filename": "monstats2.txt"
}