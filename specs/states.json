{
  "overview": "This file defines the different states used by the game and controls how they function. States are basically passive behaviors applied to units that can apply various effects.  This file is used by the following data files: cubemain.txt, MonProp.txt, Overlay.txt, Runes.txt, Sets.txt, SetItems.txt, skills.txt, UniqueItems.txt  Any column field name starting with “*” is considered a comment field and is not used by the game",
  "data_fields": [
    {
      "name": "state",
      "description": "Defines the unique name ID for the state"
    },
    {
      "name": "group",
      "description": "Assigns the state to a group ID value. This means that only 1 state with that group ID can be active at any time on a unit. If this value is empty, then ignore this."
    },
    {
      "name": "remhit",
      "description": "Boolean field. If equals 1, then this state will be removed when the unit is hit. If equals 0, then ignore this."
    },
    {
      "name": "nosend",
      "description": "Boolean field. If equals 1, then this state change will not be sent to the client. If equals 0, then ignore this."
    },
    {
      "name": "transform",
      "description": "Boolean field. If equals 1, then this state will be flagged to change the unit’s appearance and reset its animations when it is applied. If equals 0, then ignore this."
    },
    {
      "name": "aura",
      "description": "Boolean field. If equals 1, then this state will be treated as an aura. If equals 0, then ignore this."
    },
    {
      "name": "curable",
      "description": "Boolean field. If equals 1, then this state can be cured (This can be checked by NPC healing or the Paladin Cleansing skill). If equals 0, then ignore this."
    },
    {
      "name": "curse",
      "description": "Boolean field. If equals 1, then this state will be flagged as a curse. If equals 0, then ignore this."
    },
    {
      "name": "active",
      "description": "Boolean field. If equals 1, then the state will be classified as an active state which enables the “cltactivefunc” and “srvactivefunc” fields. If equals 0, then ignore this."
    },
    {
      "name": "restrict",
      "description": "Boolean field. If equals 1, then this state will restrict the usage of certain skills (This connects with the “restrict” field from the skills.txt file). If equals 0, then ignore this."
    },
    {
      "name": "disguise",
      "description": "Boolean field. If equals 1, then this state will be flagged as a disguise, meaning that the unit’s appearance is changed, which can affect how the animations are treated when being used. If equals 0, then ignored this."
    },
    {
      "name": "attblue",
      "description": "Boolean field. If equals 1, then the state will make the related Attack Rating value in the character screen be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "damblue",
      "description": "Boolean field. If equals 1, then the state will make related Damage value in the character screen be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "armblue",
      "description": "Boolean field. If equals 1, then the state will make Defense value (Armor) in the character screen be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "rfblue",
      "description": "Boolean field. If equals 1, then the state will make Fire Resistance value in the character screen be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "rlblue",
      "description": "Boolean field. If equals 1, then the state will make Lightning Resistance value in the character screen be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "rcblue",
      "description": "Boolean field. If equals 1, then the state will make Cold Resistance value in the character screen be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "stambarblue",
      "description": "Boolean field. If equals 1, then the state will make the Stamina Bar UI in the HUD be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "rpblue",
      "description": "Boolean field. If equals 1, then the state will make Poison Resistance value in the character screen be colored blue. If equals 0, then ignore this."
    },
    {
      "name": "attred",
      "description": "Boolean field. If equals 1, then the state will make the related Attack Rating value in the character screen be colored red. If equals 0, then ignore this."
    },
    {
      "name": "damred",
      "description": "Boolean field. If equals 1, then the state will make related Damage value in the character screen be colored red. If equals 0, then ignore this."
    },
    {
      "name": "armred",
      "description": "Boolean field. If equals 1, then the state will make Defense value (Armor) in the character screen be colored red. If equals 0, then ignore this."
    },
    {
      "name": "rfred",
      "description": "Boolean field. If equals 1, then the state will make Fire Resistance value in the character screen be colored red. If equals 0, then ignore this."
    },
    {
      "name": "rlred",
      "description": "Boolean field. If equals 1, then the state will make Lightning Resistance value in the character screen be colored red. If equals 0, then ignore this."
    },
    {
      "name": "rcred",
      "description": "Boolean field. If equals 1, then the state will make Cold Resistance value in the character screen be colored red. If equals 0, then ignore this."
    },
    {
      "name": "rpred",
      "description": "Boolean field. If equals 1, then the state will make Poison Resistance value in the character screen be colored red. If equals 0, then ignore this."
    },
    {
      "name": "exp",
      "description": "Boolean field. If equals 1, then a unit with this state will give exp when killed or will gain exp when killing another unit. If equals 0, then ignore this."
    },
    {
      "name": "plrstaydeath",
      "description": "Boolean field. If equals 1, then the state will persist on the player after that player is killed. If equals 0, then ignore this. state stays after death"
    },
    {
      "name": "monstaydeath",
      "description": "Boolean field. If equals 1, then the state will persist on the monster (non-boss) after that monster is killed. If equals 0, then ignore this."
    },
    {
      "name": "bossstaydeath",
      "description": "Boolean field. If equals 1, then the state will persist on the boss after that boss is killed. If equals 0, then ignore this."
    },
    {
      "name": "hide",
      "description": "Boolean field. If equals 1, then the state will hide the unit when dead (corpse and death animations will not be drawn). If equals 0, then ignore this."
    },
    {
      "name": "hidedead",
      "description": "Boolean field. If equals 1, then the state will be used to destroy units with invisible corpses. If equals 0, then ignore this."
    },
    {
      "name": "shatter",
      "description": "Boolean field. If equals 1, then the state causes ice shatter missiles to create when the unit dies. If equals 0, then ignore this."
    },
    {
      "name": "udead",
      "description": "Boolean field. If equals 1, then the state flags the unit as a used dead corpse and the unit cannot be targeted for corpse skills. If equals 0, then ignore this."
    },
    {
      "name": "life",
      "description": "Boolean field. If equals 1, then this state will cancel out the monster’s normal life regeneration. If equals 0, then ignore this."
    },
    {
      "name": "green",
      "description": "Boolean field. If equals 1, then the state overrides the color changes the unit and the unit will be colored green. If equals 0, then ignore this."
    },
    {
      "name": "pgsv",
      "description": "Boolean field. If equals 1, then the state is flagged as part of a progressive skill which relates to charge-up skill functionalities. If equals 0, then ignore this."
    },
    {
      "name": "nooverlays",
      "description": "Boolean field. If equals 1, then the standard way for states to add overlays will be disabled. If equals 0, then ignore this."
    },
    {
      "name": "noclear",
      "description": "Boolean field. If equals 1, then when this state is applied on the unit, it will not clear stats that have this state from the state’s previous application. If equals 0, then ignore this."
    },
    {
      "name": "bossinv",
      "description": "Boolean field. If equals 1, then the unit with this state will use the state’s source unit’s (in this case, the unit’s boss) inventory for generating the unit’s equipped item graphics. If equals 0, then ignore this."
    },
    {
      "name": "meleeonly",
      "description": "Boolean field. If equals 1, then the state will make the all the unit’s attack become melee attacks. If equals 0, then ignore this."
    },
    {
      "name": "notondead",
      "description": "Boolean field. If equals 1, then the state will not play its On function (function that happens when the state is applied) if the unit is dead. If equals 0, then ignore this."
    },
    {
      "name": "overlay1 (to overlay4)",
      "description": "Controls which overlay to use for normally displaying the state (Uses the “overlay” field from the Overlay.txt file). The usage depends on the specific state defined and/or the function using the state. Typically, states use “overlay1” for the Front overlay and “overlay2” for the Back overlay. Other cases can have states use each overlay field as the Front Start, Front End, Back Start, and Back End, respectively."
    },
    {
      "name": "pgsvoverlay",
      "description": "Controls which overlay to use when the state has progressive charges on the unit, such as for the charge-up stat when using Assassin Martial Arts"
    },
    {
      "name": "charge",
      "description": "up skills (Uses the “overlay” field from the Overlay.txt file)"
    },
    {
      "name": "castoverlay",
      "description": "Controls which overlay to use when the state is initially applied on the unit (Uses the “overlay” field from the Overlay.txt file)"
    },
    {
      "name": "removerlay",
      "description": "Controls which overlay to use when the state is removed from the unit (Uses the “overlay” field from the Overlay.txt file)"
    },
    {
      "name": "stat",
      "description": "Controls the stat associated with the stat. This is also used when determining how to add the progressive overlay (Uses the “Stat” field from ItemStatCost.txt)"
    },
    {
      "name": "setfunc",
      "description": "Controls the client side set functions for when the state is initially applied on the unit Code 0 1 Parameters stat 2 3 4 5 6 Description Do nothing Creates the overlay used for a progressive state. Can only be used if the “pgsv” flag is enabled and the “pgsvoverlay” field has a value. Changes the area level’s room lighting based on a skill’s “auralencalc” field from the skills.txt file. Gets the skill by looking at the “modifierlist_skill” stat defined in the ItemStatsCost.txt file Updates a skill’s level. Gets the skill by looking at the “modifierlist_skill” stat defined in the ItemStatsCost.txt file. Sets the source unit for the state. Gets the “source_unit_type” and “source_unit_id” stats defined in the ItemStatsCost.txt file. Changes the monster’s class type to another monster’s class type. Gets the “shortparam1” stat defined in the ItemStatsCost.txt file and uses stat’s parameter to get the class type that the unit should change to. Only works for monster units. Has a special case where if the class the monster changed from was the “baalthrone” monster (defined in monstats.txt), then also set the path of the monster to move a direction. Gets the skill by looking at the “modifierlist_skill” stat defined in the ItemStatsCost.txt file and then creates the overlays defined in the “castoverlay” and “overlay#” fields 7 8 9 10 skill 11 12 13 Plays a sound from the “prgsound” field of a skill from the skills.txt file. Gets the skill by looking at the “modifierlist_skill” stat defined in the ItemStatsCost.txt file. Gets the skill by looking at the “modifierlist_skill” stat defined in the ItemStatsCost.txt file and then creates the overlays defined in the “overlay1”, “overlay2” and “overlay3” fields Calls the updates passive skills function which updates the values of any skill with a “passivestate” field defined in the skills.txt file Creates the missile defined in the “skill” parameter’s “cltmissile” field and hides the targeted unit Hides the unit, by disabling the drawing of its visuals Hides the unit, by disabling the drawing of its visuals and shadows Initializes the particle for attaching to the unit by getting the offset of the source unit’s Special component Tells the unit to use the “SKILL1” command and resets its direction Sets the monster mode to neutral and sets its flag to a pet Sets up the overlays for a charge up skill. Gets the skill by looking at the “modifierlist_skill” stat defined in the ItemStatsCost.txt file. Applies all the overlays defined the “overlay#” fields, based on the number of skill charges on the unit. Creates the missile defined in the “missile” parameter Creates blood on the targeted unit and creates the missile defined in the “missile” parameter Sets the global skill cooldown to 0"
    },
    {
      "name": "remfunc",
      "description": "Controls the client side remove functions for when the state is removed from the unit missile missile 14 15 16 17 18 19 Code 0 1 2 3 4 5 6 7 8 9 10 11 12 Description Do nothing Removes the “pgsvoverlay” overlay. This function relies on the “pgsv” being enabled. Removes the state’s source unit Removes the overlays defined in the “castoverlay” and all of the “overlay#” fields Removes the “cltprgsound” from the related skill. To get the skill, this looks at the “modifierlist_skill” stat defined in the ItemStatsCost.txt file. Removes the overlays defined in the “castoverlay”, “overlay1”, “overlay2”, and “overlay3” fields Calls the updates passive skills function which updates the values of any skill with a “passivestate” field defined in the skills.txt file Checks that the related unit is a monster and that the skill used is the “Nest” skill defined in the skills.txt file. If true, then it removes the related unit’s collision pattern. Hides the unit, by disabling the drawing of its visuals and shadows Removes particles attached to the unit or the position of the unit Gets the related unit’s position and creates a “monstercorpseexplode” and “pain worm appear” missile defined from the Missiles.txt file Removes the overlays defined in all of the “overlay#” fields Sets the global skill cooldown to 0"
    },
    {
      "name": "missile",
      "description": "Used as a possible parameter for the “setfunc” field (Uses the “Missile” field from Missiles.txt)"
    },
    {
      "name": "skill",
      "description": "Used as a possible parameter for the “setfunc” field (Uses the “skill” field from skills.txt)"
    },
    {
      "name": "itemtype",
      "description": "Defines a potential Item Type (see ItemTypes.txt) that can be affected by the state’s color change"
    },
    {
      "name": "itemtrans",
      "description": "Controls the color change of the item when the unit has this state (Uses Color Codes from the reference file colors.txt) Code Color No color change White Light Grey Dark Grey Black Light Blue Dark Blue Crystal Blue Light Red Dark Red Crystal Red Light Green Dark Green Crystal Green Light Yellow Dark Yellow Light Gold Dark Gold Light Purple Dark Purple Orange Bright White whit lgry dgry blac lblu dblu cblu lred dred cred lgrn dgrn cgrn lyel dyel lgld dgld lpur dpur oran bwht"
    },
    {
      "name": "colorpri",
      "description": "Defines the priority of the state’s color change, when compared to other current sates on the unit. The current state that has the highest color priority on the unit will be used and other state colors will be ignored. If multiple current states share the same color priority value, then the game will choose the state with the lower ID value (based on where in the list of states in the data file that the state is defined)"
    },
    {
      "name": "colorshift",
      "description": "Controls which index of the color shift palette to use. ID 0 (or empty) 1 25 Description Do nothing First Hue Rotation First Hue Rotation and Darken 49 73 74 75 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 First Hue Rotation and Lighten Color to Grey Color to Black First No Red Rotation Color to Red Color to Orange Color to Yellow Color to Grass Color to Green (There is a special case to not turn the player unit green) Color to Teal Color to Aqua Color to Light Blue Color to Blue Color to Purple Color to Magenta Color to Some Funky Red Color to RGB Red Color to RGB Green Color to RGB Blue"
    },
    {
      "name": "light",
      "description": "r - Controls the state’s change of the red color value of the Light radius (Uses a value from 0 to 255)"
    },
    {
      "name": "light",
      "description": "g - Controls the state’s change of the green color value of the Light radius (Uses a value from 0 to 255)"
    },
    {
      "name": "light",
      "description": "b - Controls the state’s change of the blue color value of the Light radius (Uses a value from 0 to 255)"
    },
    {
      "name": "onsound",
      "description": "Plays a sound when the state is initially applied to the unit. Links to a “Sound” from the sounds.txt file."
    },
    {
      "name": "offsound",
      "description": "Plays a sound when the state is removed from the unit. Links to a “Sound” from the sounds.txt file."
    },
    {
      "name": "gfxtype",
      "description": "Controls the how to handle the unit graphics transformation based on the unit type (This relies on the “disguise” field being enabled). If equals 1, then use this on a monster type unit. If equals 2, then use this on a player type unit. Otherwise, ignore this."
    },
    {
      "name": "gfxclass",
      "description": "Control’s the unit class used for handling the unit graphics transformation. This field relies on what unit type was used in the “gfxtype” field. If “gfxtype” equals 1 for monster type units, then this field will rely on the “hcIdx” field from the monstats.txt data file. If “gfxtype” equals 2, then this field will use the character class numeric ID. ID 0 1 2 3 4 5 6 Description Amazon Sorceress Necromancer Paladin Barbarian Druid Assassin"
    },
    {
      "name": "cltevent",
      "description": "Controls the event to check on the client side to determine when to use the function defined in the “clteventfunc” field (Uses an event defined in the Events.txt file)"
    },
    {
      "name": "clteventfunc",
      "table": [
        {
          "·": "·",
          "Requires on the “hitbymissile” event defined in the “cltevent” field": "Uses the related skill with this state and it’s related missile fields to"
        }
      ],
      "description": "Controls the client Unit event function that is called when the event is determined in the “cltevent” field. These functions are equal to the funuctions used ID 0 1 Description Do nothing Sorceress Apply Chilling Armor fire a missile at a target"
    },
    {
      "name": "cltactivefunc",
      "description": "Controls the Client Do function that is called every frame while the state is active (see the “cltdofunc” field in skills.txt). This relies on the “active” field being enabled."
    },
    {
      "name": "srvactivefunc",
      "description": "Controls the Server Do function that is called every frame while the state is active (see the “srvdofunc” field in skills.txt). This relies on the “active” field being enabled."
    },
    {
      "name": "canstack",
      "description": "Boolean Field. If equals 1, then this state can stack with duplicate forms of itself (This is only usable with the “poison” state). If equals 0, then ignore this."
    },
    {
      "name": "sunderfull",
      "description": "Boolean Field. If equals 1, then this state will reapply any negative resistance stats at full potential when calculating pierce immunity if the immunity was broken. If equals 0, then reapply at the normal reduced efficiency (currently 1/5)."
    },
    {
      "name": "sunder",
      "description": "res-reduce – Boolean Field.  If equals 1, then this state will apply pierce resistance at reduced effectiveness (currently 1/5) when calculating pierce resistance if an immunity was broken.  If equals 0, then apply pierce resistance at normal effectiveness."
    }
  ],
  "filename": "states.txt"
}